[package]
name = "silt-road"
authors = ["Gideon <eignnx@gmail.com>"]
version = "0.1.0"
edition = "2021"

[dependencies]
bevy = { version = "0.14", default-features = false, features = [
    "wayland", # SUGGESTED BY TEMPLATE
    ### DEFAULTS ###
    # "android_shared_stdcxx", # Enable using a shared stdlib for cxx on Android
    # "animation", # Enable animation support, and glTF animation loading
    "bevy_animation", # Provides animation functionality
    "bevy_asset",     # Provides asset functionality
    # "bevy_audio", # Provides audio functionality
    "bevy_color",         # Provides shared color types and operations
    "bevy_core_pipeline", # Provides cameras and other basic render pipeline features
    # "bevy_gilrs", # Adds gamepad support
    "bevy_gizmos", # Adds support for rendering gizmos
    # "bevy_gltf", # glTF support
    # "bevy_pbr", # Adds PBR rendering
    "bevy_render", # Provides rendering functionality
    "bevy_scene",  # Provides scene functionality
    # "bevy_sprite", # Provides sprite functionality
    "bevy_state",   # Enable built in global state machines
    "bevy_text",    # Provides text functionality
    "bevy_ui",      # A custom ECS-driven UI framework
    "bevy_winit",   # winit window and input backend
    "default_font", # Include a default font, containing only ASCII characters, at the cost of a 20kB binary size increase
    # "hdr", # HDR image format support
    # "ktx2", # KTX2 compressed texture support
    "multi_threaded",   # Enables multithreaded parallelism in the engine. Disabling it forces all engine tasks to run on a single thread.
    "png",              # PNG image format support
    "smaa_luts",        # Include SMAA Look Up Tables KTX2 Files
    "sysinfo_plugin",   # Enables system information diagnostic plugin
    "tonemapping_luts", # Include tonemapping Look Up Tables KTX2 files. If everything is pink, you need to enable this feature or change the Tonemapping method on your Camera2dBundle or Camera3dBundle.
    # "vorbis", # OGG/VORBIS audio format support
    "webgl2", # Enable some limitations to be able to use WebGL2. Please refer to the WebGL2 and WebGPU section of the examples README for more information on how to run Wasm builds with WebGPU.
    # "x11", # X11 display server support
    # "zstd", # For KTX2 supercompression
    ### NON-DEFAULT FEATURES
    "serialize",           # Enable serialization support through serde
    "bevy_dynamic_plugin", # Plugin for dynamic loading (using libloading)
] }
rand = "0.8"
# Compile low-severity logs out of native builds for performance.
log = { version = "0.4", features = [
    "max_level_debug",
    "release_max_level_warn",
] }
# Compile low-severity logs out of web builds for performance.
tracing = { version = "0.1", features = [
    "max_level_debug",
    "release_max_level_warn",
] }
libnoise = "1.1.2"
bevy-inspector-egui = "0.27.0"
enum-iterator = "2.1.0"
bevy_easy_config = "0.2.0"
serde = { version = "1", features = ["derive"] }
ron = "0.8"

[features]
default = [
    # Default to a native dev build.
    "dev_native",
]
dev = [
    # Improve compile times for dev builds by linking Bevy as a dynamic library.
    "bevy/dynamic_linking",
    "bevy/bevy_dev_tools",
]
dev_native = [
    "dev",
    # Enable asset hot reloading for native dev builds.
    "bevy/file_watcher",
    # Enable embedded asset hot reloading for native dev builds.
    "bevy/embedded_watcher",
]


# Idiomatic Bevy code often triggers these lints, and the CI workflow treats them as errors.
# In some cases they may still signal poor code quality however, so consider commenting out these lines.
[lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments -- which triggers this lint.
too_many_arguments = "allow"
# Queries that access many components may trigger this lint.
type_complexity = "allow"


# Compile with Performance Optimizations:
# https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 2 #3

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
[profile.dev.package.wgpu-types]
debug-assertions = false

# The default profile is optimized for Wasm builds because
# that's what [Trunk reads](https://github.com/trunk-rs/trunk/issues/605).
# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"

# Override some settings for native builds.
[profile.release-native]
# Default to release profile values.
inherits = "release"
# Optimize with performance in mind.
opt-level = 3
# Keep debug information in the binary.
strip = "none"
